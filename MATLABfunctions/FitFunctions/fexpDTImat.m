function Y = fexpDTImat(Pin,Xin_xx,Xin_xy,Xin_xz,Xin_yy,Xin_yz,Xin_zz,Pnorm,Xnorm,Ynorm)Pin = Pin.*Pnorm;Y0 = Pin(1);lambda.x = Pin(2);lambda.y = Pin(3);lambda.z = Pin(4);A.alpha = Pin(5);A.beta = Pin(6);A.gamma = Pin(7);bT.xx = Xin_xx*Xnorm;bT.xy = Xin_xy*Xnorm;bT.xz = Xin_xz*Xnorm;bT.yy = Xin_yy*Xnorm;bT.yz = Xin_yz*Xnorm;bT.zz = Xin_zz*Xnorm;R.gamma = [    cos(A.gamma) sin(A.gamma) 0    -sin(A.gamma) cos(A.gamma) 0    0 0 1];R.beta = [    cos(A.beta) 0 -sin(A.beta)    0 1 0    sin(A.beta) 0 cos(A.beta)];R.alpha = [    cos(A.alpha) sin(A.alpha) 0    -sin(A.alpha) cos(A.alpha) 0    0 0 1];R.mat = R.gamma*R.beta*R.alpha;R.inv = inv(R.mat);DT_PAS = [    lambda.x 0 0    0 lambda.y 0    0 0 lambda.z];DT_LF = R.mat*DT_PAS*R.inv;DT.xx = DT_LF(1,1);DT.xy = DT_LF(1,2);DT.xz = DT_LF(1,3);DT.yy = DT_LF(2,2);DT.yz = DT_LF(2,3);DT.zz = DT_LF(3,3);Y = Y0.*exp( - bT.xx.*DT.xx - 2*bT.xy.*DT.xy - 2*bT.xz.*DT.xz ...    - bT.yy.*DT.yy - 2*bT.yz.*DT.yz - bT.zz.*DT.zz);Y = Y/Ynorm;