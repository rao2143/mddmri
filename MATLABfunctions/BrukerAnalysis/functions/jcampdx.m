function value = jcampdx(filnam,paranam)%    function values = jcampdx(filnam,paranam)%% Extracts the value corresponding to the parameter name 'paranam'% from the file 'filnam', which must be a JCAMPDX text file.%% value is either a scalar, a string or a vector.%% The text file may be converted from unix with the function UNIXTC.%% 'paranam' may be a cell array consisting of several parameter names.% In this case, values will be a cell array with the corresponding value % strings.% Open the file[fpath,fname,fext] = fileparts(filnam);fid = fopen(filnam,'rt');if fid == -1   error(['The file ',filnam,' does not exist.']);   returnend% Check if paranam is a cell arrayif iscell(paranam)   celltru = 1;else   celltru = 0;end% Check if filnam is a JCAMPDX filefor i =1:5,   templine = fgetl(fid);   if (length(templine) > 7)      isjcamp = isequal(templine(3:9),'JCAMPDX');      if isjcamp, break, end   endendif ~isjcamp   error([filnam,' is not a JCAMPDX text file'])end   % Scan for the parameter(s)templine = fgetl(fid);if celltru   % Two cases: if we have a cell or not   found = 0;  % Flag for the number of found parameters   value = cell(size(paranam));   while ischar(templine),	   % Find equal sign	   indxeq = find(templine == '=');       % Check if the line is a parameter line       if ~isempty(indxeq)		  for i = 1:length(paranam),            if isequal(paranam{i},templine(4:indxeq(1)-1))				tempval = templine(indxeq+1:length(templine));				indxs = find((tempval == '<') | (tempval == '>'));  % Find string 				indxv = find((tempval == '(') | (tempval == ')'));  % Find vector				if ~isempty(indxs)					% Value is a string					value{i} = tempval(indxs(1)+1:indxs(2)-1);				elseif ~isempty(indxv);					% Value is a vector at next line(s)					indxd = find(tempval == '.');					indxv = str2num(tempval(indxd(2)+1:indxv(2)-1))+1;  % Length of vector					value{i} = fscanf(fid,'%f',indxv);				else					% Value is a scalar					value{i} = str2num(tempval);				end				found = found+1;				break            end         end      end      if (found == length(paranam)), break, end      templine = fgetl(fid);   endelse   % Not a cell	while ischar(templine),		% Find equal sign		indxeq = find(templine == '=');		% Check if the line is a parameter line		if ~isempty(indxeq)			if isequal(paranam,templine(4:indxeq(1)-1))				tempval = templine(indxeq+1:length(templine));				indxs = find((tempval == '<') | (tempval == '>'));  % Find string 				indxv = find((tempval == '(') | (tempval == ')'));  % Find vector				if ~isempty(indxs)					% Value is a string					value = tempval(indxs(1)+1:indxs(2)-1);				elseif ~isempty(indxv);					% Value is a vector at next line(s)					indxd = find(tempval == '.');					indxv = str2num(tempval(indxd(2)+1:indxv(2)-1))+1;  % Length of vector					value = fscanf(fid,'%f',indxv);				else					% Value is a scalar					value = str2num(tempval);				end				break			end		end		templine = fgetl(fid);	endend   fclose(fid);