clear allwd = cd;DataDir = '/Users/daniel/NMRdata/AVII500/DT';cd(DataDir)ExpNam = {'qMASdtirare2d_test'}; expno = 14;ExpNam = {'AOToct'}; expno = 116;%GetExpnamslb = 3e-4;si = 64;td1start = 1;td1end = 32;thresh = .02;Fit = 'Y';for ndir = 1:length(ExpNam)    ExpNam{ndir}    cd(ExpNam{ndir})    %GetExpnos    for nexp = 1:length(expno)        res = fExpnoInfo2('Y','N','N',expno(nexp));        eval(['load ' num2str(expno(nexp)) '/NMRacqus'])        eval(['load ' num2str(expno(nexp)) '/NMRacqu2s'])        td = 256*ceil(NMRacqus.td/256);        if exist('si') == 0, si = td/2; end        dw = 1/NMRacqus.sw_h/2;        t = 2*dw*(0:(td/2-1))';        t = t-t(td/4+1);        nu = NMRacqus.sw_h*linspace(0, 1, si)'; nu = nu - nu(si/2+1);        fid = fopen([num2str(expno(nexp)) '/difframp_x.txt']);        difframp.x = fscanf(fid,'%f');        fclose(fid);        fid = fopen([num2str(expno(nexp)) '/difframp_y.txt']);        difframp.y = fscanf(fid,'%f');        fclose(fid);        fid = fopen([num2str(expno(nexp)) '/difframp_z.txt']);        difframp.z = fscanf(fid,'%f');        fclose(fid);        Gmax = 9.6;        if strcmp(NMRacqus.probhd,'5 mm DIF-30 2H-1H Z-GRD Z3886/0018') == 1            Gmax = 18*sqrt(1.9e-09/1.9e-9);        end        if strcmp(NMRacqus.probhd,'5 mm MIC BB-1H XYZ-GRD Z3386/0019') == 1            Gmax = 3*sqrt(1.9e-09/1.9e-9);        end        if strcmp(NMRacqus.probhd,'10 mm MIC 1H XYZ-GRD Z3386/0020') == 1            Gmax = 3*sqrt(1.9e-09/1.9e-9);        end        G.x = difframp.x*Gmax.*NMRacqus.cnst1/100;        G.y = difframp.y*Gmax.*NMRacqus.cnst2/100;        G.z = difframp.z*Gmax.*NMRacqus.cnst3/100;        G.r = sqrt(G.x.^2 + G.y.^2 + G.z.^2);        Gnorm.x = G.x./G.r;        Gnorm.y = G.y./G.r;        Gnorm.z = G.z./G.r;        gamma = 26.75e7;        if NMRacqus.nuc1 == '2H'            gamma = 4.11e7;        end        if any(strcmp(NMRacqus.pulprog,{'DT_pgse','DT_pgsedt','DT_pgsedtimge1d','DT_pgsedtimge3d'})) == 1            delta = NMRacqus.d3+NMRacqus.d2; epsilon = NMRacqus.d2;            Delta = delta+epsilon+2*NMRacqus.d4;            tdiff = Delta-delta/3+epsilon^3/30/delta^2-epsilon^2/6/delta;        elseif any(strcmp(NMRacqus.pulprog,{'DT_pgste'})) == 1            delta = NMRacqus.d3+NMRacqus.d2; epsilon = NMRacqus.d2;            Delta = delta+epsilon+2*NMRacqus.d4+NMRacqus.d5;            tdiff = Delta-delta/3+epsilon^3/30/delta^2-epsilon^2/6/delta;        elseif any(strcmp(NMRacqus.pulprog,{'DT_ledbppgste'})) == 1            epsilon = NMRacqus.d2;            delta = 2*NMRacqus.d2 + 2*NMRacqus.d3;            tau = 2*NMRacqus.d4 + NMRacqus.p2/1e6;            tau1 = 2*NMRacqus.d6+4*NMRacqus.d2+2*NMRacqus.d3+2*NMRacqus.d4+NMRacqus.p2/1e6+NMRacqus.d22;            tspoil = NMRacqus.d46+2*NMRacqus.d42+NMRacqus.d43+2*NMRacqus.d22;            tau2 = tspoil + NMRacqus.d5;            Delta = 4*NMRacqus.d2+2*NMRacqus.d3+2*NMRacqus.d4+NMRacqus.p2/1e6+NMRacqus.d22+2*NMRacqus.d6+2*NMRacqus.p1/1e6+NMRacqus.d5+tspoil;            tLED = tspoil+NMRacqus.d7;            txy = 2*tau1;            tz = tau2 + tLED;            tdiff = Delta-delta/3-tau/2-epsilon/2-epsilon.^2/6./delta+epsilon.^3/15./delta.^2;        end        q = gamma*G.r*delta/2/pi;        b = (2*pi*q).^2*tdiff;        g.z = NMRacqus.cnst13*Gmax/100;        k.z = gamma*g.z*t/2/pi;        g.x = linspace(-1,1,NMRacqus.l3+1)'*Gmax*NMRacqus.cnst21/100; g.x = g.x(1:NMRacqus.l3);        g.y = linspace(-1,1,NMRacqus.l2+1)'*Gmax*NMRacqus.cnst22/100; g.y = g.y(1:NMRacqus.l2);        t_phasenc = NMRacqus.d33 + NMRacqus.d32;        k.x = gamma*g.x'*t_phasenc/2/pi;        k.y = gamma*g.y'*t_phasenc/2/pi;        lbfunz = exp(-(lb*pi*k.z).^2);        lbfunx = exp(-(lb*pi*k.x).^2);        %figure(1), clf, plot(k.z,lbfunz,'o',k.x,lbfunx,'s'), return        if exist('six') == 0, six = NMRacqus.l3; end        if exist('siy') == 0, siy = NMRacqus.l2; end        if exist('si') == 0, si = NMRacqus.td/2; end        r.x = .5/(k.x(2)-k.x(1))*linspace(-1,1,six+1)'; r.x = r.x(1:six);        r.y = .5/(k.y(2)-k.y(1))*linspace(-1,1,siy+1)'; r.y = r.y(1:siy);        r.z = .5/(k.z(2)-k.z(1))*linspace(-1,1,si+1)'; r.z = r.z(1:si);        fid = fopen([num2str(expno(nexp)) '/ser'],'r','ieee-le');        S = fread(fid,[2, NMRacqus.td*NMRacqu2s.td/2],'long')';        S = S(:,1) + i*S(:,2);        %figure(1), clf, plot(real(S)), return        S = reshape(S,NMRacqus.td/2,NMRacqus.l3,NMRacqus.l2,NMRacqus.l1);        Stemp = S(:,NMRacqus.l3/2+1,NMRacqus.l2/2+1,td1start);        %figure(1), clf, plot(real(Stemp)), return        %Stemp = flipud(fftshift(fft(Stemp)));        grpdlycount = (1:(td/2))'/(td/2) - floor(td/2/2);        zeroshiftfun = exp(-i*(NMRacqus.grpdly*2*pi*grpdlycount));        zeroshiftfun = flipdim(zeroshiftfun,1);        zeroshiftfun = fftshift(zeroshiftfun,1);        Stemp = fft(Stemp,td/2,1);        Stemp = zeroshiftfun.*Stemp;        Stemp = ifft(Stemp,td/2,1);        %figure(1), clf, plot(t,real(Stemp)), return        Stemp = lbfunz.*Stemp;        %figure(1), clf, plot(k.z,real(Stemp),k.z,lbfunz*max(real(Stemp))), return        index = 1:td/2;        if si<td/2            index = .5*(td/2-si) + (1:si);            Stemp = Stemp(index);            k.z = k.z(index);            lbfunz = lbfunz(index);            %figure(1), clf, plot(k.z,real(Stemp),k.z,lbfunz*max(real(Stemp))), return        end        Itemp = fftshift(fft(Stemp,si));        %figure(1), clf, plot(abs(Itemp)), return        [zeroshiftfun,karray.y,karray.x,karray.q] = ndgrid(zeroshiftfun,k.y,k.x,q);        [karray.z,karray.y,karray.x,karray.q] = ndgrid(k.z,k.y,k.x,q);        lbfun1 = exp(-lb.^2*pi.^2*(karray.z.^2 + karray.y.^2 + karray.x.^2));        %figure(1), clf, plot(real(squeeze(S(:,9,9,1)))), return        Stemp = fft(S,td/2,1);        Stemp = zeroshiftfun.*Stemp;        Stemp = ifft(Stemp,td/2,1);        %figure(1), clf, plot(real(squeeze(Stemp(:,9,9,1)))), return        Stemp = Stemp(index,:,:,:);        Stemp = Stemp.*lbfun1;        %figure(1), clf, plot(real(squeeze(Stemp(:,9,9,1)))), return        Itemp = fftshift(fft(ifftshift(Stemp,1),[],1),1);        Itemp = fftshift(fft(ifftshift(Itemp,2),[],2),2);        I = fftshift(fft(ifftshift(Itemp,3),[],3),3);        I = abs(I);        Imax = max(reshape(I,numel(I),1));        %%        figure(1), clf        clim = [0 1];        for ntd1 = 1:NMRacqus.l1            axes('position',[(ntd1-1)/NMRacqus.l1 0 1/NMRacqus.l1 .7])            Iplot = squeeze(I(:,:,six/2+1,ntd1));            imagesc(Iplot/Imax,clim)            colormap('hot')            axis equal, axis tight, axis off            set(gca,'YDir','normal')            axes('position',[(ntd1-1)/NMRacqus.l1 .72 1/NMRacqus.l1 .2])            Iplot = squeeze(I(si/2+1,:,:,ntd1));            imagesc(Iplot/Imax,clim)            colormap('hot')            axis equal, axis tight, axis off            set(gca,'YDir','normal')            title(num2str(ntd1))        end        %%        Images.S0 = zeros(si,siy,six);        Images.lambda.x = zeros(si,siy,six);        Images.lambda.y = zeros(si,siy,six);        Images.lambda.z = zeros(si,siy,six);        Images.A.alpha = zeros(si,siy,six);        Images.A.beta = zeros(si,siy,six);        Images.A.gamma = zeros(si,siy,six);        Images.Dxx = zeros(si,siy,six);        Images.Dyy = zeros(si,siy,six);        Images.Dzz = zeros(si,siy,six);        Images.lambda1 = zeros(si,siy,six);        Images.lambda2 = zeros(si,siy,six);        Images.lambda3 = zeros(si,siy,six);        Images.v1.x = zeros(si,siy,six); Images.v1.y = zeros(si,siy,six); Images.v1.z = zeros(si,siy,six);        Images.v2.x = zeros(si,siy,six); Images.v2.y = zeros(si,siy,six); Images.v2.z = zeros(si,siy,six);        Images.v3.x = zeros(si,siy,six); Images.v3.y = zeros(si,siy,six); Images.v3.z = zeros(si,siy,six);        %%        for nz = 1:si        for ny = 1:siy        for nx = 1:six     %%            %nz = si/2-10; ny = siy/2+1; nx = six/2+1;            points = td1start:min([NMRacqus.l1 td1end]);            Yin = squeeze(I(nz,ny,nx,points));            Xin = b(points);            Gnormpoints.x = Gnorm.x(points); Gnormpoints.y = Gnorm.y(points); Gnormpoints.z = Gnorm.z(points);            %figure(1), clf, plot(points,Yin,'-o'), return            Pin = [Yin(1)   1e-9 .5 pi/4 pi/4]; Funam = 'fexpDTIaxialsym';            LB = [0 1e-11 -1 0 0]; UB = [2*Yin(1) 2e-9 2 pi 2*pi];            Pin = [Yin(1)   1e-9 .3e-9 .1e-9 2*pi 2*pi 2*pi]; Funam = 'fexpDTI';            LB = [0 1e-11*[1 1 1] 0 0 0]; UB = [2*Yin(1) 3e-9*[1 1 1] 4*pi 4*pi 4*pi];            options = optimset('MaxFunEvals',1e4);            if Yin(1)>Imax*thresh                Pout = Pin; Ynorm = mean(Yin); Xnorm = mean(Xin); Pnorm = Pin;                 [Pout,resnorm,residual,exitflag,output] = lsqcurvefit(Funam,Pin./Pnorm,Xin/Xnorm,Yin/Ynorm,LB./Pnorm,UB./Pnorm,options,Pnorm,Xnorm,Ynorm,Gnormpoints);                Pout = Pout.*Pnorm;                Ycalc = feval(Funam,Pout,Xin,ones(size(Pin)),1,1,Gnormpoints); error = Yin - Ycalc;                %return                %figure(2), clf, plot(points,Yin,'-o',points,Ycalc,'-x'), title(num2str(nz)); Pout', pause(.1)                %return                S0 = Pout(1);                lambda.x = Pout(2);                lambda.y = Pout(3);                lambda.z = Pout(4);                A.alpha = angle(exp(i*Pout(5)));                A.beta = angle(exp(i*Pout(6)));                A.gamma = angle(exp(i*Pout(7)));                R.gamma = [                    cos(A.gamma) sin(A.gamma) 0                    -sin(A.gamma) cos(A.gamma) 0                    0 0 1];                R.beta = [                    cos(A.beta) 0 -sin(A.beta)                    0 1 0                    sin(A.beta) 0 cos(A.beta)];                R.alpha = [                    cos(A.alpha) sin(A.alpha) 0                    -sin(A.alpha) cos(A.alpha) 0                    0 0 1];                R.mat = R.gamma*R.beta*R.alpha;                R.inv = inv(R.mat);                DT_PAS = [                    lambda.x 0 0                    0 lambda.y 0                    0 0 lambda.z];                DT_LF = R.mat*DT_PAS*R.inv;                lambdas = [lambda.x lambda.y lambda.z];                [lambdas,index] = sort(lambdas,2,'descend');                lambda1 = lambdas(1);                lambda2 = lambdas(2);                lambda3 = lambdas(3);                vx.x = R.mat(1,1); vx.y = R.mat(2,1); vx.z = R.mat(3,1);                vy.x = R.mat(1,2); vy.y = R.mat(2,2); vy.z = R.mat(3,2);                vz.x = R.mat(1,3); vz.y = R.mat(2,3); vz.z = R.mat(3,3);                if lambda1 == lambda.x                                if lambda2 == lambda.y                        v1.x = vx.x; v1.y = vx.y; v1.z = vx.z;                        v2.x = vy.x; v2.y = vy.y; v2.z = vy.z;                        v3.x = vz.x; v3.y = vz.y; v3.z = vz.z;                    elseif lambda2 == lambda.z                        v1.x = vx.x; v1.y = vx.y; v1.z = vx.z;                        v2.x = vz.x; v2.y = vz.y; v2.z = vz.z;                        v3.x = vy.x; v3.y = vy.y; v3.z = vy.z;                    end                elseif lambda1 == lambda.y                                if lambda2 == lambda.x                        v1.x = vy.x; v1.y = vy.y; v1.z = vy.z;                        v2.x = vx.x; v2.y = vx.y; v2.z = vx.z;                        v3.x = vz.x; v3.y = vz.y; v3.z = vz.z;                    elseif lambda2 == lambda.z                        v1.x = vy.x; v1.y = vy.y; v1.z = vy.z;                        v2.x = vz.x; v2.y = vz.y; v2.z = vz.z;                        v3.x = vx.x; v3.y = vx.y; v3.z = vx.z;                    end                elseif lambda1 == lambda.z                                if lambda2 == lambda.x                        v1.x = vz.x; v1.y = vz.y; v1.z = vz.z;                        v2.x = vx.x; v2.y = vx.y; v2.z = vx.z;                        v3.x = vy.x; v3.y = vy.y; v3.z = vy.z;                    elseif lambda2 == lambda.y                        v1.x = vz.x; v1.y = vz.y; v1.z = vz.z;                        v2.x = vy.x; v2.y = vy.y; v2.z = vy.z;                        v3.x = vx.x; v3.y = vx.y; v3.z = vx.z;                    end                end                                Images.S0(nz,ny,nx) = S0;                Images.lambda.x(nz,ny,nx) = lambda.x;                Images.lambda.y(nz,ny,nx) = lambda.y;                Images.lambda.z(nz,ny,nx) = lambda.z;                Images.A.alpha(nz,ny,nx) = A.alpha;                Images.A.beta(nz,ny,nx) = A.beta;                Images.A.gamma(nz,ny,nx) = A.gamma;                Images.Dxx(nz,ny,nx) = DT_LF(1,1);                Images.Dyy(nz,ny,nx) = DT_LF(2,2);                Images.Dzz(nz,ny,nx) = DT_LF(3,3);                Images.lambda1(nz,ny,nx) = lambda1;                Images.lambda2(nz,ny,nx) = lambda2;                Images.lambda3(nz,ny,nx) = lambda3;                Images.v1.x(nz,ny,nx) = v1.x; Images.v1.y(nz,ny,nx) = v1.y; Images.v1.z(nz,ny,nx) = v1.z;                Images.v2.x(nz,ny,nx) = v2.x; Images.v2.y(nz,ny,nx) = v2.y; Images.v2.z(nz,ny,nx) = v2.z;                Images.v3.x(nz,ny,nx) = v3.x; Images.v3.y(nz,ny,nx) = v3.y; Images.v3.z(nz,ny,nx) = v3.z;            end    %%        end        end        end        Images.ADC = 1/3*(Images.lambda1+Images.lambda2+Images.lambda3);        Images.FA = sqrt(1/2)*sqrt((Images.lambda1-Images.lambda2).^2+(Images.lambda1-Images.lambda3).^2+(Images.lambda2-Images.lambda3).^2)...            ./sqrt(Images.lambda1.^2+Images.lambda2.^2+Images.lambda3.^2);        Images.FA(find(isnan(Images.FA)==1)) = 0;        Images.CL = (Images.lambda1 - Images.lambda2)./Images.lambda1;        Images.CL(find(isnan(Images.CL)==1)) = 0;        Images.CP = (Images.lambda2 - Images.lambda3)./Images.lambda1;        Images.CP(find(isnan(Images.CP)==1)) = 0;                eval(['save ' num2str(expno(nexp)) '/Images Images r'])        %%        ADCmax = max(reshape(Images.ADC,numel(Images.ADC),1));        Dmax = max([max(reshape(Images.Dxx,numel(Images.ADC),1)) max(reshape(Images.Dyy,numel(Images.ADC),1)) max(reshape(Images.Dzz,numel(Images.ADC),1))]);        colormap('default')        colormap('hot')        hot = colormap;        cool = [hot(:,3) hot(:,2) hot(:,1)];        hotcool = [flipud(cool); hot];        colormap(hotcool)        nz = si/2+1;        ny = siy/2+1;        figure(3), clf        colormap('gray')        axes('position',[.1 .1 .12 .7])        Iplot = squeeze(Images.S0(:,ny,:)/Imax);        clim = [0 1];        imagesc(r.x*1e3,r.z*1e3,Iplot,clim)        set(gca,'YDir','normal')        axis equal, axis tight        ylabel('z / mm'), xlabel('x / mm')        axes('position',[.1 .77 .12 .2])        Iplot = squeeze(Images.S0(nz,:,:)/Imax);        imagesc(r.x*1e3,r.y*1e3,Iplot,clim)        set(gca,'YDir','normal','XTick',[])        axis equal, axis tight        ylabel('y / mm')        title('S0')        axes('position',[.25 .1 .12 .7])        Iplot = squeeze(Images.ADC(:,ny,:)/ADCmax);        imagesc(r.x*1e3,r.z*1e3,Iplot,clim)        set(gca,'YDir','normal')        axis equal, axis tight, axis off        axes('position',[.25 .77 .12 .2])        Iplot = squeeze(Images.ADC(nz,:,:)/ADCmax);        imagesc(r.x*1e3,r.y*1e3,Iplot,clim)        set(gca,'YDir','normal')        axis equal, axis tight, axis off        title('ADC')        axes('position',[.4 .1 .12 .7])        Iplot = squeeze(Images.FA(:,ny,:));        imagesc(r.x*1e3,r.z*1e3,Iplot,clim)        set(gca,'YDir','normal')        axis equal, axis tight, axis off        axes('position',[.4 .77 .12 .2])        Iplot = squeeze(Images.FA(nz,:,:));        imagesc(r.x*1e3,r.y*1e3,Iplot,clim)        set(gca,'YDir','normal')        axis equal, axis tight, axis off        title('FA')        axes('position',[.55 .1 .12 .7])        Iplot = zeros(si,siy,3);        Iplot(:,:,1) = squeeze(Images.CL(:,ny,:)).*abs(squeeze(Images.v1.x(:,ny,:)));        Iplot(:,:,2) = squeeze(Images.CL(:,ny,:)).*abs(squeeze(Images.v1.y(:,ny,:)));        Iplot(:,:,3) = squeeze(Images.CL(:,ny,:)).*abs(squeeze(Images.v1.z(:,ny,:)));        %Iplot = squeeze(Images.CL(:,ny,:));        imagesc(r.x*1e3,r.z*1e3,Iplot)        set(gca,'YDir','normal')        axis equal, axis tight, axis off        axes('position',[.55 .77 .12 .2])        Iplot = zeros(siy,six,3);        Iplot(:,:,1) = (squeeze(Images.CL(nz,:,:)).*abs(squeeze(Images.v1.x(nz,:,:))))';        Iplot(:,:,2) = (squeeze(Images.CL(nz,:,:)).*abs(squeeze(Images.v1.y(nz,:,:))))';        Iplot(:,:,3) = (squeeze(Images.CL(nz,:,:)).*abs(squeeze(Images.v1.z(nz,:,:))))';        %Iplot = squeeze(Images.CL(nz,:,:))';        imagesc(r.x*1e3,r.y*1e3,Iplot)        set(gca,'YDir','normal')        axis equal, axis tight, axis off        title('CL')        axes('position',[.7 .1 .12 .7])        Iplot = squeeze(Images.CP(:,ny,:));        imagesc(r.y*1e3,r.z*1e3,Iplot,clim)        Iplot = zeros(si,siy,3);        Iplot(:,:,1) = squeeze(Images.CP(:,ny,:)).*abs(squeeze(Images.v3.x(:,ny,:)));        Iplot(:,:,2) = squeeze(Images.CP(:,ny,:)).*abs(squeeze(Images.v3.y(:,ny,:)));        Iplot(:,:,3) = squeeze(Images.CP(:,ny,:)).*abs(squeeze(Images.v3.z(:,ny,:)));        %Iplot = squeeze(Images.CP(:,ny,:));        imagesc(r.x*1e3,r.z*1e3,Iplot)        set(gca,'YDir','normal')        axis equal, axis tight, axis off        axes('position',[.7 .77 .12 .2])        Iplot = squeeze(Images.CP(nz,:,:));        imagesc(r.y*1e3,r.x*1e3,Iplot,clim)        Iplot = zeros(siy,six,3);        Iplot(:,:,1) = (squeeze(Images.CP(nz,:,:)).*abs(squeeze(Images.v3.x(nz,:,:))))';        Iplot(:,:,2) = (squeeze(Images.CP(nz,:,:)).*abs(squeeze(Images.v3.y(nz,:,:))))';        Iplot(:,:,3) = (squeeze(Images.CP(nz,:,:)).*abs(squeeze(Images.v3.z(nz,:,:))))';        %Iplot = squeeze(Images.CP(nz,:,:));        imagesc(r.x*1e3,r.y*1e3,Iplot)        set(gca,'YDir','normal')        axis equal, axis tight, axis off        title('CP')        colormap(gray(256))        axes('position',[.85 .1 .12 .7])        Iplot = zeros(si,siy,3);        Iplot(:,:,1) = squeeze(Images.Dxx(:,ny,:))/Dmax;        Iplot(:,:,2) = squeeze(Images.Dyy(:,ny,:))/Dmax;        Iplot(:,:,3) = squeeze(Images.Dzz(:,ny,:))/Dmax;        imagesc(r.x*1e3,r.z*1e3,Iplot)        set(gca,'YDir','normal')        axis equal, axis tight, axis off        axes('position',[.85 .77 .12 .2])        Iplot = squeeze(Images.CP(nz,:,:));        imagesc(r.x*1e3,r.y*1e3,Iplot,clim)        Iplot = zeros(siy,six,3);        Iplot(:,:,1) = squeeze(Images.Dxx(nz,:,:))/Dmax;        Iplot(:,:,2) = squeeze(Images.Dyy(nz,:,:))/Dmax;        Iplot(:,:,3) = squeeze(Images.Dzz(nz,:,:))/Dmax;        imagesc(r.x*1e3,r.y*1e3,Iplot)        set(gca,'YDir','normal')        axis equal, axis tight, axis off        title('Dxx,Dyy,Dzz')        eval(['print ' num2str(expno(nexp)) '/ReportFig -depsc -loose'])        %%     end end