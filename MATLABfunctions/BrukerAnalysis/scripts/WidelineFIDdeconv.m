clear allwd = cd;cd(['/opt/topspin/data/DT/nmr']);%cd(['/Users/daniel/NMRdata/AVII200/'])%ExpNam = {'C8G2dqf'}; %expno = 7;%ExpNam = {'Spindiff'}; expno = 9;ExpNam = {'Starch_DRcorr'}; expno = 87;lb = .1;basl = [.02 .35 .65 .98];CheckBasline = 0;AutoPhase = 1;MkReportFig = 1;SvSpecDataMat = 0;SvSpecDataTxt = 0;for ndir = 1:length(ExpNam)    ExpNam{ndir}    cd(ExpNam{ndir})    if exist('expno','var') == 0        GetExpnos    end    for nexp = 1:length(expno)        ConvertAcqus = 'N';        ConvertProcs = 'N';       MakeTextfile = 'N';        if exist([num2str(expno(nexp)) '/NMRacqus.mat']) == 0            ConvertAcqus = 'Y';        end        if exist([num2str(expno(nexp)) '/pdata/1/NMRprocs.mat']) == 0            ConvertProcs = 'Y';        end        res = fExpnoInfo2(ConvertAcqus,MakeTextfile,ConvertProcs,expno(nexp));           load([num2str(expno(nexp)) '/NMRacqus.mat'])        load([num2str(expno(nexp)) '/pdata/1/NMRprocs.mat'])        if exist('PPlist') == 0            PPlist = {'zg','DT_zgqe'};        end        if any(strcmp(NMRacqus.pulprog,PPlist))        if exist([num2str(expno(nexp)) '/fid'],'file') == 2            td = 256*ceil(NMRacqus.td/256);            de = NMRacqus.de;             swh = NMRacqus.sw_h;            sw = NMRacqus.sw_h/NMRacqus.bf1;            grpdly = NMRacqus.grpdly;            bf1 = NMRacqus.bf1;            dw = 1/NMRacqus.sw_h/2;            t = .5*NMRacqus.p1*1e-6 + de*1e-6 + 2*dw*(0:(td/2-1))';            if strcmp(NMRacqus.pulprog,'DT_zgqe')                t = 0*NMRacqus.p1*1e-6 + 0*de*1e-6 + 2*dw*(0:(td/2-1))';            end            if exist('si') == 0, si = td/2; end            nu = swh*linspace(0, 1, si)'; nu = nu - nu(si/2+1);            ppm = sw*linspace(-1,0,si)' + NMRprocs.offset;            if exist('ppmcalibval')==1                ppm = ppm-mean(ppm)+ppmcalibval;            end            if exist('ppmshift')==1                ppm = ppm + ppmshift;            end            fid = fopen([num2str(expno(nexp)) '/fid'],'r','ieee-le');            S = fread(fid,[2,td/2],'long')';            fclose(fid);            S = S(:,1) + i*S(:,2);            S((td/2-10):td/2) = 0;            %figure(1), clf, plot(real(S)), return            lbfun = exp(-abs(lb*pi*(t-t(round(grpdly)))));            S = lbfun.*S;            %figure(1), clf, plot(t,real(S),t,lbfun*max(real(S))), return            grpdlycount = (1:td/2)'*2/td - floor(td/4);            zeroshiftfun = exp(-i*(NMRacqus.grpdly*2*pi*grpdlycount));            zeroshiftfun = flipdim(zeroshiftfun,1);            zeroshiftfun = fftshift(zeroshiftfun,1);            S = fft(S,td/2,1);            S = zeroshiftfun.*S;            S = ifft(S,td/2,1);            %figure(1), clf, semilogy(abs(S)), return            Xdat = t;            Ydat = abs(S);            fitpoints = 2:round(.9*td/2);                        Xin = Xdat(fitpoints);            Yin = Ydat(fitpoints);                        %figure(1), clf, semilogy(Xin,Yin,'o'), return            Pin = [Yin(1)*1.1   1/mean(Xin)]; Funam = 'fexp';            Pin = [Yin(1)*1.1   1/mean(Xin)*[1 .1] .5]; Funam = 'fbiexp';            Pin = [Yin(1)*1.1   1e4 1e5]; Funam = 'fsincfid';            Pin = [Yin(1)*1.1   6e2 3e2]; Funam = 'fvoigtfid';            Pin = [Yin(1)*1.1 .75 5e4 1e5 5e2 3e2]; Funam = 'fsincvoigtfid';            %Pin = [Yin(1)*1.1   1/mean(Xin)*[1 .1] .1/mean(Xin)*[1 .1] .5]; Funam = 'fbigamma';            Pout = Pin; Ynorm = mean(Yin); Xnorm = mean(Xin); Pnorm = Pin;             Pout = Pnorm.*lsqcurvefit(Funam,Pin./Pnorm,Xin/Xnorm,Yin/Ynorm,zeros(size(Pin)),[],[],Pnorm,Xnorm,Ynorm);            Yout = feval(Funam,Pout,Xin,ones(size(Pin)),1,1); error = Yin - Yout;            PlotInterm = 0;            if PlotInterm                figure(1), clf                axes('position',[.1 .27 .8 .65])                semilogy(Xin,Yin,'o',Xin,Yout)                title(['expno=' num2str(expno(nexp)) '  '  Funam  '   Pout= ' num2str(Pout,3) ])                axis([min(Xin) max(Xin) max(Yout)*[1e-2 1.2] ])                xlabel('time'), ylabel('intensity')                axes('position',[.1 .05 .8 .1])                plot(Xin,error,'o'), grid                ylabel('residual')                pause(1)                return            end                        FitDat.tin = Xin;            FitDat.Sin = Yin;            FitDat.Sout = Yout;            FitDat.tcalc = NMRacqus.aq*linspace(0,1,td*8);            FitDat.Scalc = feval(Funam,Pout,FitDat.tcalc);            FitDat.S0 = Pout(1);            FitDat.Funam = Funam;            FitDat.Pout = Pout;                                    if si>(td/2), S = [S(1:(td/2-round(grpdly))); zeros(si-td/2,1); S((td/2-round(grpdly)+1):(td/2))]; end            S(round(.9*td/2):td/2) = 0;            %figure(1), clf, plot(real(S)), return            S(1) = 0.5*S(1);            I = fftshift(fft(S,si));            %figure(1), clf, plot(real(I)), return            baslpoints = [];            for nbasl = 1:2:length(basl)-1                baslpoints = [baslpoints round(basl(nbasl)*si):round(basl(nbasl+1)*si)];            end            baslpoints = baslpoints';            pivot = max(find(abs(I) == max(abs(I))))/si;            pivotpoint = round(pivot*si);            if AutoPhase                Pout = fminsearch('ACME_AutoPhase',[20 -50],[],I,baslpoints,pivotpoint);                phc0=Pout(1);                phc1=Pout(2);            end            phcorrfun = exp(i*(phc0*pi/180.*ones(1,si)'+phc1*pi/180*((1:si)'-pivotpoint)./si));            I = I.*phcorrfun;            I = I - mean(I(baslpoints));            if CheckBasline                figure(1), clf                subplot(2,1,1)                plot((1:si)/si,real(I),pivotpoint/si,0,'ro')                set(gca,'XDir','reverse')                subplot(2,1,2)                plot((1:si)/si,real(I),pivotpoint/si,0,'ro',baslpoints/si,zeros(size(baslpoints)),'r.')                axis([0 1 min(real(I)) max(real(I))*.1])                set(gca,'XDir','reverse')                cd .., return            end            PolyCoeff = polyfit(baslpoints,I(baslpoints),1);            I = I - polyval(PolyCoeff,(1:si)');            %figure(1), clf, plot(1:si,real(I),baslpoints,zeros(size(baslpoints)),'r.'), return            I = real(I);            fs = 20;            lw = 2;%%            figure(1), clf            axes('position',[-.01 .2 1.02 .8],'FontSize',fs*.8)            plot(nu/1e3,I/max(I),'k-','LineWidth',.5*lw)            hold on            %plot(ppm,.1+100*I/max(I),'k-','LineWidth',.25*lw)            set(gca,'XDir','reverse','YTick',[],'LineWidth',lw,'Box','off','TickDir','out','Ycolor',[1 1 1])            axis([[min(nu)-.02*swh max(nu)+.02*swh]/1e3 1*[min([min(I/max(I)) -.05]) 1.05]])            xlabel(['\nu(' NMRacqus.nuc1 ') / kHz'],'FontSize',fs)            axes('position',[.15 .4 .3 .55],'FontSize',fs*.8)            semilogy(FitDat.tin*1e3,FitDat.Sin/FitDat.S0,'ko','LineWidth',.5*lw)            hold on            semilogy(FitDat.tcalc*1e3,FitDat.Scalc/FitDat.S0,'b-','LineWidth',1*lw)            axis([4*[-.1 1.1] 1e-4 1.2])            xlabel(['t / ms'],'FontSize',fs)            ylabel(['S / S_0'],'FontSize',fs)            set(gca,'YTick',[1e-2 .1 1],'LineWidth',lw,'Box','off',...                'TickDir','out','TickLength',.02*[1 1])            pause(.1)            if MkReportFig                eval(['print ' num2str(expno(nexp)) '/ReportFig -loose -depsc'])            end            if SvSpecDataMat                Spec.I = I;                Spec.ppm = ppm;                save([num2str(expno(nexp)) '/SpecDat.mat'],'Spec')            end            if SvSpecDataTxt                dat = [ppm I];                save([num2str(expno(nexp)) '/SpecDat.txt'],'dat','-ascii','-tabs')            end            end        end    end    clear expno    cd ..endcd(wd)