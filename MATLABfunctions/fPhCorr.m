function Iout = fPhCorr(Iin,phc0,phc1,pivot)%function sp_dp = dephase_fun(sp_ft,phc0,phc1)%0th and 1st order phase correction%input: Iin	- input spectrum%         phc0	- 0th order phase correction (degrees)%         phc1	- 1st order phase correction (degrees)%output: Iout	- spectrum after phase correctionphc0=phc0*pi/180;              %convert degree to radianphc1=phc1*pi/180;              %convert degree to radian[m,n]=size(Iin);a_num=((1:n)-pivot)./n;a=phc0.*ones(1,n)+a_num.*phc1; % calculate a(i,j)%re=real(sp_ft);                % get the real part of complex numbers%im=imag(sp_ft);                % get the imaginary part of complex numbers%re_new=re.*cos(a)-im.*sin(a);  % get the new real part by phase correction%im_new=im.*sin(a)+im.*cos(a);  % get the new imaginary part by phase correction%sp_dp=re_new+im_new*i;         % dephased nmr spectral dataIout = Iin.*exp(i*a);